{"version":3,"sources":["assets/image/camilla.jpeg","components/header/index.js","components/hero/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","linkdin","marginLeft","marginRight","button","margin","spacing","textDecoration","color","menu","backgroundColor","Header","props","classes","CssBaseline","AppBar","elevation","Toolbar","className","href","IconButton","aria-label","icon","linkedinBox","content","paddingTop","flexGrow","camilla","maxWidth","paper","padding","title","text","Hero","Container","id","Grid","container","item","xs","Paper","Typography","variant","src","alt","root","position","bottom","right","ScrollTop","children","window","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","onClick","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","Main","Fragment","Fab","size","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.931c003c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/camilla.519fe5a2.jpeg\";","import React from 'react';\nimport { AppBar, Toolbar, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AnchorLink from 'react-anchor-link-smooth-scroll'\nimport { Icon } from '@iconify/react';\nimport linkedinBox from '@iconify/icons-mdi/linkedin-box';\n\n\nconst useStyles = makeStyles(theme => ({\n  linkdin: {\n    marginLeft: 'auto',\n    marginRight: -12,\n\n  },\n  button: {\n    margin: theme.spacing(1),\n    textDecoration: 'none',\n    color: '#4A4A4A'\n  },\n  menu: {\n    backgroundColor: '#FFFAF7'\n  }\n\n}));\n\n\nexport default function Header(props) {\n  const classes = useStyles();\n  return (\n    <>\n      <CssBaseline />\n      <AppBar elevation='0'>\n        <Toolbar className={classes.menu}>\n          < AnchorLink className={classes.button} href='#sectio1'>UX CASES</AnchorLink>\n          < AnchorLink className={classes.button} href='#sectio2'>INTERFACES</AnchorLink>\n          < AnchorLink className={classes.button} href='#sectio3'>METHODOLOGIES</AnchorLink>\n          <IconButton className={classes.linkdin} aria-label=\"Linkdin\">\n            <Icon icon={linkedinBox} />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </>)\n}\n","import React from 'react';\n\nimport { Grid, Paper, Typography, Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport camilla from '../../assets/image/camilla.jpeg'\n\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    paddingTop: 80,\n    flexGrow: 1,\n    backgroundColor: '#FFFAF7'\n  },\n  camilla: {\n    maxWidth: '100%'\n  },\n  paper: {\n    padding: theme.spacing(3, 2),\n    backgroundColor: '#FFFAF7',\n    color: '#4A4A4A'\n  },\n  title:{\n    padding: theme.spacing(4, 0)\n  },\n  text:{\n    padding: theme.spacing(2, 0)\n  }\n}));\n\nexport default function Hero(props) {\n  const classes = useStyles();\n  return (\n    <>\n      <CssBaseline />\n      <Container>\n        <section id=\"sectio1\">\n          <div className={classes.content}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <Paper elevation='0' className={classes.paper}>\n                <Typography className={classes.title} variant=\"h2\">Camilla Camilla</Typography>\n                <Typography className={classes.title} variant=\"h5\">UX / UI Desinger</Typography>\n                  <Typography className={classes.text} variant=\"body1\">Over the last years helping companies to create and reimagine experiences for digital products by researching, discovering, co-creating, prototyping, testing and re-evaluating in an Agile environment.</Typography>\n                  <Typography className={classes.text} variant=\"body1\">\n                    I am Camilla Sun-born, First of Her Name, Queen of the Karaoke, Breaker of Bad Flows and Unhelpful Wireframes, Mother of Prototypes and User Tests.</Typography>\n                </Paper>\n              </Grid>\n              <Grid item xs={6}>\n                <Paper elevation='0' className={classes.paper}>\n                  <img className={classes.camilla} src={camilla} alt=\"Camilla Camilla\" />\n                </Paper>\n              </Grid>\n            </Grid>\n          </div>\n        </section>\n      </Container>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Fab from '@material-ui/core/Fab';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Zoom from '@material-ui/core/Zoom';\nimport Header from './components/header'\nimport './App.css';\nimport Hero from './components/hero';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    backgroundColor: '#FFFAF7'\n  }\n}));\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = event => {\n    const anchor = (event.target.ownerDocument || document).querySelector('#sectio1');\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport function Main(props) {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Header />\n      <Hero />\n      <ScrollTop {...props}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </React.Fragment>\n  );\n}\n\nfunction App() {\n  return (\n      <Main />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}